name: Build
on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  QT_VERSION: '6.9.3'

jobs:
  build-windows-client:
    runs-on: windows-2022
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Client version from CMake
        id: client_version
        uses: DarwinInnovation/cmake-project-version-action@v1.0

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install Qt
        id: qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          arch: 'win64_msvc2022_64'
          modules: 'qtwebsockets'
          add-tools-to-path: true
          cache: true

      - name: Generate and Build Client
        shell: pwsh
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Zip Client binaries
        shell: pwsh
        run: |
          Compress-Archive -Path build/install/* -DestinationPath build/OdznDrive_win64_msvc2022.zip

      - name: Upload Client Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OdznDrive_win64_msvc2022
          path: build/OdznDrive_win64_msvc2022.zip

      - name: Update .iss version
        shell: pwsh
        run: |
          $content = Get-Content tools/installer.iss
          $new = $content -replace '(?<=#define AppVersion ")[^"]+', "${{ steps.client_version.outputs.version }}"
          Set-Content tools/installer.iss -Value $new

      - name: Create Client Installer
        shell: pwsh
        run: |
          $env:Path += ";${env:ProgramFiles(x86)}\Inno Setup 6"
          iscc.exe tools/installer.iss

      - name: Upload Client Installer
        uses: actions/upload-artifact@v4
        with:
          name: OdznDrive_Installer
          path: tools/Output/OdznDrive_Installer.exe

  build-linux:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/odizinne/latestqt-ubuntu-22.04:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Client
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Copy icon to install directory
        run: |
          cp resources/icons/icon.png build/install/
      
      - name: Create install script
        run: |
          cat > build/install/install.sh << 'EOF'
          #!/bin/bash
          set -e
          SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
          INSTALL_DIR="$HOME/.local/bin/odzndriveclient"
          DESKTOP_FILE="$HOME/.local/share/applications/odzndrive.desktop"
          echo "Installing OdznDrive..."
          mkdir -p "$HOME/.local/bin"
          mkdir -p "$HOME/.local/share/applications"
          mkdir -p "$INSTALL_DIR"
          echo "Copying files to $INSTALL_DIR..."
          cp -r "$SCRIPT_DIR"/* "$INSTALL_DIR/"
          chmod +x "$INSTALL_DIR/OdznDrive"
          echo "Creating desktop entry..."
          cat > "$DESKTOP_FILE" << DESKTOP_EOF
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=OdznDrive
          Comment=OdznDrive Client
          Exec=$INSTALL_DIR/OdznDrive
          Icon=$INSTALL_DIR/icon.png
          Terminal=false
          Categories=Utility;Network;
          DESKTOP_EOF
          if command -v update-desktop-database &> /dev/null; then
              update-desktop-database "$HOME/.local/share/applications"
          fi
          echo "Installation complete!"
          echo "You can now launch OdznDrive from your application menu"
          echo "or run it directly with: $INSTALL_DIR/OdznDrive"
          EOF
          chmod +x build/install/install.sh

      - name: Configure Server
        run: |
          mkdir build-server
          cd build-server
          cmake ../server -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build Server
        run: |
          cd build-server
          cmake --build .
          cmake --install .

      - name: Zip Client binaries
        run: |
          cd build
          zip -r OdznDrive_linux_x64.zip install

      - name: Zip Server binaries
        run: |
          cd build-server
          zip -r OdznDriveServer_linux_x64.zip install

      - name: Upload Client Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OdznDrive_linux_x64
          path: build/OdznDrive_linux_x64.zip

      - name: Upload Server Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OdznDriveServer_linux_x64
          path: build-server/OdznDriveServer_linux_x64.zip