name: Build
on:
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  QT_VERSION: '6.9.3'

jobs:
  build-windows-client:
    runs-on: windows-2022
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Client version from CMake
        id: client_version
        uses: DarwinInnovation/cmake-project-version-action@v1.0
        with:
          cmake-lists-file: 'Client/CMakeLists.txt'

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install Qt
        id: qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          arch: 'win64_msvc2022_64'
          modules: 'qtwebsockets'
          add-tools-to-path: true
          cache: true

      - name: Generate and Build with CMake
        shell: pwsh
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Zip Client binaries
        shell: pwsh
        run: |
          $zipFile = "build/OdznDriveClient_win64_msvc2022.zip"
          $folder = "build/install/Client"
          Compress-Archive -Path $folder -DestinationPath $zipFile

      - name: Upload Client Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OdznDriveClient_win64_msvc2022
          path: build/OdznDriveClient_win64_msvc2022.zip

      - name: Update .iss version
        shell: pwsh
        run: |
          $content = Get-Content tools/installer.iss
          $new = $content -replace '(?<=#define AppVersion ")[^"]+', "${{ steps.client_version.outputs.version }}"
          Set-Content tools/installer.iss -Value $new

      - name: Create Client Installer
        shell: pwsh
        run: |
          $env:Path += ";${env:ProgramFiles(x86)}\Inno Setup 6"
          iscc.exe tools/installer.iss

      - name: Upload Client Installer
        uses: actions/upload-artifact@v4
        with:
          name: OdznDriveClient_Installer
          path: tools/Output/OdznDriveClient_Installer.exe

  build-linux:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/odizinne/latestqt-ubuntu-22.04:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build both Client and Server
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Zip Client binaries
        run: |
          cd build/install
          zip -r ../OdznDriveClient_linux_x64.zip Client

      - name: Zip Server binaries
        run: |
          cd build/install
          zip -r ../OdznDriveServer_linux_x64.zip Server

      - name: Upload Client Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OdznDriveClient_linux_x64
          path: build/OdznDriveClient_linux_x64.zip

      - name: Upload Server Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OdznDriveServer_linux_x64
          path: build/OdznDriveServer_linux_x64.zip